name: 'Release'
description: 'Create a GitHub release from a git tag.'
inputs:
  name:
    description: 'The name of the release.'
    required: true
  is-final:
    description: 'Whether the release is a final release (eg v1.2.3).'
    required: true
  pr-number:
    description: 'The PR number of the tag is meant for a release candidate.'
    required: false
  tag-comment-header:
    description: 'The header on the PR tag comment, used to update the comment and to find existing comments.'
    required: false
    default: "## Tag created"
  body:
    description: 'The text to post on the release.'
    required: true
  workflow-run-url:
    description: 'The url of the workflow run.'
    required: false
    default: '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
  github-token:
    description: 'The GitHub token used for creating the tag.'
    required: true
outputs:
  changelog:
    description: 'The changelog for the release.'
    value: ${{ steps.changelog.outputs.changelog }}
runs:
  using: "composite"
  steps:
    - name: Generate changelog
      id: changelog
      uses: metcalfc/changelog-generator@v4.0.1
      with:
        myToken: ${{ inputs.github-token }}
    - name: Create Release
      uses: softprops/action-gh-release@v0.1.14
      with:
        name: Release ${{ inputs.name }}
        body: |
          ${{ inputs.body }}
          
          ## Change log
            ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: ${{ inputs.is-final == 'false' }}
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
    - name: Find Tag Comment
      uses: peter-evans/find-comment@v2
      if: inputs.pr-number
      id: find-tag-comment
      with:
        issue-number: ${{ inputs.pr-number }}
        comment-author: 'github-actions[bot]'
        body-includes: ${{ inputs.tag-comment-header }}
        direction: last
    - name: Prepare tag comment content
      id: tag-comment
      shell: bash
      if: inputs.pr-number
      run: |
        echo "tag_comment_body<<END_OF_VALUE" >> "${GITHUB_OUTPUT}"
        echo "Release: [${release}](https://github.com/GRESB/test-github-actions/releases/tag/${release})" >> "${GITHUB_OUTPUT}"
        echo "" >> "${GITHUB_OUTPUT}"
        echo "" >> "${GITHUB_OUTPUT}"
        echo "${body}" >> "${GITHUB_OUTPUT}"
        echo "END_OF_VALUE" >> "${GITHUB_OUTPUT}"

        footer="<sub><sup>*Generated by [workflow ${{ github.run_id }}](${{ inputs.workflow-run-url }})*"
        if [[ "${{ steps.find-tag-comment.outputs.comment-id }}" != "" ]]; then
          echo "DEBUG :: comment updated"
          updated="(comment updated ♻️)"
        fi
        echo "footer=${footer} ${updated}</sup></sub>" >> "${GITHUB_OUTPUT}"
      env:
        release: ${{ inputs.name }}
        body: ${{ inputs.body }}
    - name: Render release comment template
      uses: chuhlomin/render-template@v1.6
      if: inputs.pr-number
      id: template
      with:
        template: .github/templates/tag-comment.md
        vars: |
          header: "${{ inputs.tag-comment-header }}"
          tag: ${{ inputs.name }}
          body: "${{ steps.tag-comment.outputs.tag_comment_body }}"
          footer: "${{ steps.tag-comment.outputs.footer }}"
    - name: Create or update comment
      uses: peter-evans/create-or-update-comment@v2
      if: inputs.pr-number
      with:
        comment-id: ${{ steps.find-tag-comment.outputs.comment-id }}
        issue-number: ${{ inputs.pr-number }}
        body: ${{ steps.template.outputs.result }}
        edit-mode: replace
